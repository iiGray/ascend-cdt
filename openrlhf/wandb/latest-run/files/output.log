Train epoch:   0%|                                                                                          | 0/2 [00:00<?, ?it/s]

  with device_autocast_ctx, torch.cpu.amp.autocast(**cpu_autocast_kwargs), recompute_context:  # type: ignore[attr-defined] ?it/s]
/data/anaconda3/envs/zecheng/lib/python3.10/site-packages/torch/autograd/graph.py:768: UserWarning: c10d::allreduce_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass














































































































































































































































































































































































































Train step of epoch 0:   9%|█▊                  | 400/4436 [1:14:11<8:14:43,  7.35s/it, gpt_loss=0.102, loss_mean=0.0556, lr=2e-6]






























































































































































































































































































































































































































































Train step of epoch 0:  18%|██▋            | 800/4436 [2:29:58<8:39:15,  8.57s/it, gpt_loss=0.00846, loss_mean=0.0424, lr=1.98e-6]

































































































































































































































































































































































































































































Train step of epoch 0:  27%|███▏        | 1200/4436 [3:45:01<12:25:55, 13.83s/it, gpt_loss=0.000891, loss_mean=0.0457, lr=1.95e-6]
































































































































































































































































































































































































































































Train step of epoch 0:  36%|█████▊          | 1600/4436 [4:56:15<8:20:37, 10.59s/it, gpt_loss=0.0244, loss_mean=0.0412, lr=1.9e-6]
Eval stage of steps 100:   0%|                                                                             | 0/64 [00:00<?, ?it/s]
[2025-02-07 00:27:22,652] [INFO] [logging.py:96:log_dist] [Rank 0] step=100, skipped=0, lr=[1.8959672993629303e-06, 1.8959672993629303e-06], mom=[(0.9, 0.95), (0.9, 0.95)]




















































  with device_autocast_ctx, torch.cpu.amp.autocast(**cpu_autocast_kwargs), recompute_context:  # type: ignore[attr-defined]0.0513]
/data/anaconda3/envs/zecheng/lib/python3.10/site-packages/torch/autograd/graph.py:768: UserWarning: c10d::allreduce_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass














































































































































































































































































































































































































Train step of epoch 0:  45%|███████▏        | 2000/4436 [6:13:42<8:15:22, 12.20s/it, gpt_loss=0.052, loss_mean=0.0452, lr=1.83e-6]































































































































































































































































































































































































































































Train step of epoch 0:  54%|████████       | 2400/4436 [7:27:03<5:29:57,  9.72s/it, gpt_loss=0.0737, loss_mean=0.0554, lr=1.74e-6]































































































































































































































































































































































































































































Train step of epoch 0:  63%|██████████      | 2800/4436 [8:39:48<4:56:22, 10.87s/it, gpt_loss=0.0934, loss_mean=0.067, lr=1.64e-6]






























































































































































































































































































































































































































































Train step of epoch 0:  72%|██████████▊    | 3199/4436 [9:55:59<4:00:31, 11.67s/it, gpt_loss=0.0308, loss_mean=0.0354, lr=1.54e-6]
[2025-02-07 05:27:10,767] [INFO] [logging.py:96:log_dist] [Rank 0] step=200, skipped=0, lr=[1.5316391348436545e-06, 1.5316391348436545e-06], mom=[(0.9, 0.95), (0.9, 0.95)]
Train step of epoch 0:  72%|██████████▊    | 3200/4436 [9:56:03<3:14:40,  9.45s/it, gpt_loss=0.0528, loss_mean=0.0371, lr=1.53e-6]
















































  with device_autocast_ctx, torch.cpu.amp.autocast(**cpu_autocast_kwargs), recompute_context:  # type: ignore[attr-defined]0.0467]
/data/anaconda3/envs/zecheng/lib/python3.10/site-packages/torch/autograd/graph.py:768: UserWarning: c10d::allreduce_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass














































































































































































































































































































































































































Train step of epoch 0:  81%|███████████▎  | 3600/4436 [11:09:06<2:24:04, 10.34s/it, gpt_loss=0.0675, loss_mean=0.0441, lr=1.41e-6]






























































































































































































































































































































































































































































Train step of epoch 0:  90%|████████████▌ | 4000/4436 [12:25:11<1:11:44,  9.87s/it, gpt_loss=0.0663, loss_mean=0.0435, lr=1.29e-6]






























































































































































































































































































































































































































































Train step of epoch 0:  99%|███████████████▊| 4400/4436 [13:38:08<06:42, 11.18s/it, gpt_loss=0.0528, loss_mean=0.0453, lr=1.16e-6]

















































































Train step of epoch 0: 100%|████████████████| 4436/4436 [13:46:26<00:00, 13.89s/it, gpt_loss=0.00724, loss_mean=0.035, lr=1.14e-6]
Train step of epoch 1:   0%|                                                                             | 0/4436 [00:00<?, ?it/s]










































































































































































































































































































































































Train step of epoch 1:   8%|█▏             | 363/4436 [1:07:25<15:36:42, 13.80s/it, gpt_loss=0.0273, loss_mean=0.0324, lr=1.03e-6]
[2025-02-07 10:25:09,324] [INFO] [logging.py:96:log_dist] [Rank 0] step=300, skipped=0, lr=[1.023745563764544e-06, 1.023745563764544e-06], mom=[(0.9, 0.95), (0.9, 0.95)]


  with device_autocast_ctx, torch.cpu.amp.autocast(**cpu_autocast_kwargs), recompute_context:  # type: ignore[attr-defined].02e-6]
/data/anaconda3/envs/zecheng/lib/python3.10/site-packages/torch/autograd/graph.py:768: UserWarning: c10d::allreduce_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
















































































































































































































































































































































































































Train step of epoch 1:  17%|██▌            | 764/4436 [2:21:53<11:09:32, 10.94s/it, gpt_loss=0.0235, loss_mean=0.0462, lr=8.94e-7]















































































































































































































































































































































































































Train step of epoch 1:  26%|███▉           | 1164/4436 [3:34:55<9:51:52, 10.85s/it, gpt_loss=0.0385, loss_mean=0.0492, lr=7.68e-7]


































































































